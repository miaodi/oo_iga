#include <iostream>
#include <eigen3/Eigen/Dense>
#include "Surface.hpp"
#include "Utility.hpp"
#include "PhyTensorNURBSBasis.h"
#include "MembraneStiffnessVisitor.hpp"
#include "BendingStiffnessVisitor.hpp"
#include "PostProcess.hpp"
#include "H1DomainSemiNormVisitor.hpp"
#include "NeumannBoundaryVisitor.hpp"
#include "DofMapper.hpp"
#include <fstream>
#include <time.h>
#include <boost/math/constants/constants.hpp>
#include "BiharmonicInterfaceVisitor.hpp"
#include "StiffnessAssembler.hpp"
#include "ConstraintAssembler.hpp"
#include <eigen3/unsupported/Eigen/KroneckerProduct>

using namespace Eigen;
using namespace std;
using GeometryVector = PhyTensorBsplineBasis<2, 3, double>::GeometryVector;
using WeightedGeometryVector = PhyTensorNURBSBasis<2, 3, double>::WeightedGeometryVector;
using WeightVector = PhyTensorNURBSBasis<2, 3, double>::WeightVector;
using Vector1d = Matrix<double, 1, 1>;

int main()
{
    double nu = .0;
    double E = 4.32e8;
    double R = 25;
    double L = 50;
    KnotVector<double> knot_vector;
    knot_vector.InitClosed(4, 0, 1);

    Vector4d
        point111(-29.282032302755088, -29.282032302755088, 29.282032302755088, 5.071796769724491),
        point112(-21.712083963243018, -30.677838684923557, 30.677838684923557, 4.795919436663918),
        point113(-14.391575887554247, -31.571002659693967, 31.571002659693967, 4.6172866417098355),
        point114(-7.195787943777123, -32.017584647079175, 32.017584647079175, 4.527970244232795),
        point115(0.0, -32.017584647079175, 32.017584647079175, 4.527970244232795),

        point121(-30.677838684923557, -21.712083963243018, 30.677838684923557, 4.795919436663918),
        point122(-22.869643776777806, -22.869643776777806, 33.02239411869588, 4.494476595178904),
        point123(-15.200184105546917, -23.632006915798854, 34.56287410349287, 4.295770397960685),
        point124(-7.600092052773459, -24.013188485309378, 35.33311409589136, 4.196417299351575),
        point125(0.0, -24.013188485309378, 35.33311409589136, 4.196417299351575),

        point131(-31.571002659693967, -14.391575887554247, 31.571002659693967, 4.6172866417098355),
        point132(-23.632006915798854, -15.200184105546917, 34.562874103492874, 4.295770397960685),
        point133(-15.739256250875362, -15.739256250875362, 36.54993607567506, 4.082178134496292),
        point134(-7.869628125437681, -16.008792323539584, 37.54346706176616, 3.975382002764096),
        point135(0.0, -16.008792323539584, 37.54346706176616, 3.975382002764096),

        point141(-32.017584647079175, -7.195787943777123, 32.017584647079175, 4.527970244232795),
        point142(-24.013188485309378, -7.600092052773459, 35.33311409589137, 4.196417299351575),
        point143(-16.008792323539584, -7.869628125437681, 37.543467061766165, 3.9753820027640954),
        point144(-8.004396161769792, -8.004396161769792, 38.64864354470356, 3.864864354470356),
        point145(0.0, -8.004396161769792, 38.64864354470356, 3.864864354470356),

        point151(-32.017584647079175, 0.0, 32.017584647079175, 4.527970244232795),
        point152(-24.013188485309378, 0.0, 35.33311409589137, 4.196417299351575),
        point153(-16.008792323539584, 0.0, 37.543467061766165, 3.9753820027640954),
        point154(-8.004396161769792, 0.0, 38.64864354470356, 3.864864354470356),
        point155(0.0, 0.0, 38.64864354470356, 3.864864354470356);

    WeightedGeometryVector points1{point111, point112, point113, point114, point115,
                                   point121, point122, point123, point124, point125,
                                   point131, point132, point133, point134, point135,
                                   point141, point142, point143, point144, point145,
                                   point151, point152, point153, point154, point155};

    Vector4d
        point211(0.0, -32.017584647079175, 32.017584647079175, 4.527970244232795),
        point212(7.195787943777123, -32.017584647079175, 32.017584647079175, 4.527970244232795),
        point213(14.391575887554247, -31.571002659693967, 31.571002659693967, 4.6172866417098355),
        point214(21.712083963243018, -30.677838684923557, 30.677838684923557, 4.795919436663918),
        point215(29.282032302755088, -29.282032302755088, 29.282032302755088, 5.071796769724491),

        point221(0.0, -24.013188485309378, 35.33311409589136, 4.196417299351575),
        point222(7.600092052773459, -24.013188485309378, 35.33311409589136, 4.196417299351575),
        point223(15.200184105546917, -23.632006915798854, 34.56287410349287, 4.295770397960685),
        point224(22.869643776777806, -22.869643776777806, 33.02239411869588, 4.494476595178904),
        point225(30.677838684923557, -21.712083963243018, 30.677838684923557, 4.795919436663918),

        point231(0.0, -16.008792323539584, 37.54346706176616, 3.975382002764096),
        point232(7.869628125437681, -16.008792323539584, 37.54346706176616, 3.975382002764096),
        point233(15.739256250875362, -15.739256250875362, 36.54993607567506, 4.082178134496292),
        point234(23.632006915798854, -15.200184105546917, 34.562874103492874, 4.295770397960685),
        point235(31.571002659693967, -14.391575887554247, 31.571002659693967, 4.6172866417098355),

        point241(0.0, -8.004396161769792, 38.64864354470356, 3.864864354470356),
        point242(8.004396161769792, -8.004396161769792, 38.64864354470356, 3.864864354470356),
        point243(16.008792323539584, -7.869628125437681, 37.543467061766165, 3.9753820027640954),
        point244(24.013188485309378, -7.600092052773459, 35.33311409589137, 4.196417299351575),
        point245(32.017584647079175, -7.195787943777123, 32.017584647079175, 4.527970244232795),

        point251(0.0, 0.0, 38.64864354470356, 3.864864354470356),
        point252(8.004396161769792, 0.0, 38.64864354470356, 3.864864354470356),
        point253(16.008792323539584, 0.0, 37.543467061766165, 3.9753820027640954),
        point254(24.013188485309378, 0.0, 35.33311409589137, 4.196417299351575),
        point255(32.017584647079175, 0.0, 32.017584647079175, 4.527970244232795);

    WeightedGeometryVector points2{point211, point212, point213, point214, point215,
                                   point221, point222, point223, point224, point225,
                                   point231, point232, point233, point234, point235,
                                   point241, point242, point243, point244, point245,
                                   point251, point252, point253, point254, point255};
    array<shared_ptr<PhyTensorNURBSBasis<2, 3, double>>, 12> domains;
    domains[0] = make_shared<PhyTensorNURBSBasis<2, 3, double>>(std::vector<KnotVector<double>>{knot_vector, knot_vector}, points1);
    domains[1] = make_shared<PhyTensorNURBSBasis<2, 3, double>>(std::vector<KnotVector<double>>{knot_vector, knot_vector}, points2);
    Vector2d u;
    cin >> u(0) >> u(1);
    cout << (domains[0]->AffineMap(u)).norm() << endl;
    cout << (domains[1]->AffineMap(u)).norm() << endl;
    return 0;
}